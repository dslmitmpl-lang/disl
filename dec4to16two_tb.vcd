$date
	Wed Sep 24 15:05:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module dec4to16two_tb $end
$var wire 16 ! y [15:0] $end
$var reg 1 " en $end
$var reg 4 # w [3:0] $end
$scope module uut $end
$var wire 1 " en $end
$var wire 4 $ w [3:0] $end
$var wire 16 % y [15:0] $end
$var wire 4 & en_out [3:0] $end
$scope module d0 $end
$var wire 2 ' a [1:0] $end
$var wire 1 ( en $end
$var reg 4 ) y [3:0] $end
$upscope $end
$scope module d1 $end
$var wire 2 * a [1:0] $end
$var wire 1 + en $end
$var reg 4 , y [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 2 - a [1:0] $end
$var wire 1 . en $end
$var reg 4 / y [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 2 0 a [1:0] $end
$var wire 1 1 en $end
$var reg 4 2 y [3:0] $end
$upscope $end
$scope module stage1 $end
$var wire 2 3 a [1:0] $end
$var wire 1 " en $end
$var reg 4 4 y [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 4
b0 3
b1110 2
11
b0 0
b1110 /
1.
b0 -
b1110 ,
1+
b0 *
b1110 )
1(
b0 '
b1111 &
b1110111011101110 %
b0 $
b0 #
0"
b1110111011101110 !
$end
#10
b1110111011101111 !
b1110111011101111 %
b1111 )
0(
b1110 &
b1110 4
1"
#20
b1101 ,
b1101 /
b1101110111011111 !
b1101110111011111 %
b1101 2
b1 '
b1 *
b1 -
b1 0
b1 #
b1 $
#30
b1011 ,
b1011 /
b1011101110111111 !
b1011101110111111 %
b1011 2
b10 '
b10 *
b10 -
b10 0
b10 #
b10 $
#40
b111 ,
b111 /
b111011101111111 !
b111011101111111 %
b111 2
b11 '
b11 *
b11 -
b11 0
b11 #
b11 $
#50
b1110 )
0+
1(
b1101 &
b1101 4
b1111 ,
b1110 /
b1110111011111110 !
b1110111011111110 %
b1110 2
b1 3
b0 '
b0 *
b0 -
b0 0
b100 #
b100 $
#60
b1101 )
b1101 /
b1101110111111101 !
b1101110111111101 %
b1101 2
b1 '
b1 *
b1 -
b1 0
b101 #
b101 $
#70
b1011 )
b1011 /
b1011101111111011 !
b1011101111111011 %
b1011 2
b10 '
b10 *
b10 -
b10 0
b110 #
b110 $
#80
b111 )
b111 /
b111011111110111 !
b111011111110111 %
b111 2
b11 '
b11 *
b11 -
b11 0
b111 #
b111 $
#90
b1110 ,
0.
1+
b1011 &
b1011 4
b1110 )
b1111 /
b1110111111101110 !
b1110111111101110 %
b1110 2
b10 3
b0 '
b0 *
b0 -
b0 0
b1000 #
b1000 $
#100
b1101 )
b1101 ,
b1101111111011101 !
b1101111111011101 %
b1101 2
b1 '
b1 *
b1 -
b1 0
b1001 #
b1001 $
#110
b1011 )
b1011 ,
b1011111110111011 !
b1011111110111011 %
b1011 2
b10 '
b10 *
b10 -
b10 0
b1010 #
b1010 $
#120
b111 )
b111 ,
b111111101110111 !
b111111101110111 %
b111 2
b11 '
b11 *
b11 -
b11 0
b1011 #
b1011 $
#130
b1110 /
01
1.
b111 &
b111 4
b1110 )
b1110 ,
b1111111011101110 !
b1111111011101110 %
b1111 2
b11 3
b0 '
b0 *
b0 -
b0 0
b1100 #
b1100 $
#140
b1101 )
b1101 ,
b1111110111011101 !
b1111110111011101 %
b1101 /
b1 '
b1 *
b1 -
b1 0
b1101 #
b1101 $
#150
b1011 )
b1011 ,
b1111101110111011 !
b1111101110111011 %
b1011 /
b10 '
b10 *
b10 -
b10 0
b1110 #
b1110 $
#160
b111 )
b111 ,
b1111011101110111 !
b1111011101110111 %
b111 /
b11 '
b11 *
b11 -
b11 0
b1111 #
b1111 $
#170
b1011 )
b1011 ,
b1011 /
b1011101110111011 !
b1011101110111011 %
b1011 2
11
b10 3
b10 '
b10 *
b10 -
b10 0
b1111 &
b1111 4
b1010 #
b1010 $
0"
#180
